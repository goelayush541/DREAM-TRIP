{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayush Goel\\\\OneDrive\\\\Desktop\\\\DEPLOYED\\\\DREAM TRIP\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { authService } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    // Check if user is logged in on app load\n    const token = localStorage.getItem('token');\n    const savedUser = localStorage.getItem('user');\n    if (token && savedUser) {\n      try {\n        // Set user from localStorage immediately for better UX\n        setUser(JSON.parse(savedUser));\n      } catch (e) {\n        console.error('Error parsing saved user:', e);\n        localStorage.removeItem('user');\n      }\n      // Then verify with backend\n      getProfile();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const getProfile = async () => {\n    try {\n      const response = await authService.getProfile();\n      setUser(response.data);\n      // Update localStorage with fresh user data\n      localStorage.setItem('user', JSON.stringify(response.data));\n      setLoading(false);\n    } catch (err) {\n      console.error('Profile fetch error:', err);\n      // Clear invalid tokens\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      setUser(null);\n      setLoading(false);\n    }\n  };\n  const login = async credentials => {\n    try {\n      setError('');\n      setLoading(true);\n      const response = await authService.login(credentials);\n      const {\n        token,\n        ...userData\n      } = response.data;\n\n      // Store token and user data\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      setLoading(false);\n      return response.data;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Login failed. Please try again.';\n      setError(errorMessage);\n      setLoading(false);\n      throw new Error(errorMessage);\n    }\n  };\n  const register = async userData => {\n    try {\n      setError('');\n      setLoading(true);\n      const response = await authService.register(userData);\n      const {\n        token,\n        ...userDataFromResponse\n      } = response.data;\n\n      // Store token and user data\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userDataFromResponse));\n      setUser(userDataFromResponse);\n      setLoading(false);\n      return response.data;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      const errorMessage = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || 'Registration failed. Please try again.';\n      setError(errorMessage);\n      setLoading(false);\n      throw new Error(errorMessage);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    setError('');\n  };\n  const updateProfile = async updates => {\n    try {\n      const response = await authService.updateProfile(updates);\n      setUser(response.data);\n      localStorage.setItem('user', JSON.stringify(response.data));\n      return response.data;\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      const errorMessage = ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.error) || 'Update failed';\n      setError(errorMessage);\n      throw new Error(errorMessage);\n    }\n  };\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    updateProfile,\n    clearError: () => setError('')\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"uhK5DVO1lnMu6N43kGsC7HYFAr0=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","error","setError","token","localStorage","getItem","savedUser","JSON","parse","e","console","removeItem","getProfile","response","data","setItem","stringify","err","login","credentials","userData","_err$response","_err$response$data","errorMessage","register","userDataFromResponse","_err$response2","_err$response2$data","logout","updateProfile","updates","_err$response3","_err$response3$data","value","clearError","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ayush Goel/OneDrive/Desktop/DEPLOYED/DREAM TRIP/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { authService } from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in on app load\r\n    const token = localStorage.getItem('token');\r\n    const savedUser = localStorage.getItem('user');\r\n    \r\n    if (token && savedUser) {\r\n      try {\r\n        // Set user from localStorage immediately for better UX\r\n        setUser(JSON.parse(savedUser));\r\n      } catch (e) {\r\n        console.error('Error parsing saved user:', e);\r\n        localStorage.removeItem('user');\r\n      }\r\n      // Then verify with backend\r\n      getProfile();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const getProfile = async () => {\r\n    try {\r\n      const response = await authService.getProfile();\r\n      setUser(response.data);\r\n      // Update localStorage with fresh user data\r\n      localStorage.setItem('user', JSON.stringify(response.data));\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.error('Profile fetch error:', err);\r\n      // Clear invalid tokens\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      setUser(null);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      setError('');\r\n      setLoading(true);\r\n      const response = await authService.login(credentials);\r\n      const { token, ...userData } = response.data;\r\n      \r\n      // Store token and user data\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      setUser(userData);\r\n      setLoading(false);\r\n      \r\n      return response.data;\r\n    } catch (err) {\r\n      const errorMessage = err.response?.data?.error || 'Login failed. Please try again.';\r\n      setError(errorMessage);\r\n      setLoading(false);\r\n      throw new Error(errorMessage);\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      setError('');\r\n      setLoading(true);\r\n      const response = await authService.register(userData);\r\n      const { token, ...userDataFromResponse } = response.data;\r\n      \r\n      // Store token and user data\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(userDataFromResponse));\r\n      setUser(userDataFromResponse);\r\n      setLoading(false);\r\n      \r\n      return response.data;\r\n    } catch (err) {\r\n      const errorMessage = err.response?.data?.error || 'Registration failed. Please try again.';\r\n      setError(errorMessage);\r\n      setLoading(false);\r\n      throw new Error(errorMessage);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n    setError('');\r\n  };\r\n\r\n  const updateProfile = async (updates) => {\r\n    try {\r\n      const response = await authService.updateProfile(updates);\r\n      setUser(response.data);\r\n      localStorage.setItem('user', JSON.stringify(response.data));\r\n      return response.data;\r\n    } catch (err) {\r\n      const errorMessage = err.response?.data?.error || 'Update failed';\r\n      setError(errorMessage);\r\n      throw new Error(errorMessage);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    error,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    clearError: () => setError('')\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}